version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    
    working_directory: ~/jts

    docker: # run the steps with Docker
    #- image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run
      - image: circleci/openjdk:8u171-jdk 

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

        #- restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
        #  # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
        #  key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      #  This is wonderful idea
      #  - run: mvn dependency:go-offline # gets the project dependencies
      
      #  This is wonderful idea - save_cache: # saves the project dependencies
      #    paths:
      #      - ~/.m2
      #    key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn install -DskipTests # run the actual tests
     
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: jts

        #- store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #  path: target/surefire-reports
      
        #- store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #  path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples 
  test_hatbox:
    working_directory: ~/hatbox 
    docker:
      - image: circleci/openjdk:8u171-jdk 
    steps:  
      - restore_cache:
        key: jts
      - run:
          name: See what is in the M2 repo
          command: find ~/.m2 | grep jts
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: "Get and build Hatbox"
          command: |
            git clone git@github.com:jnh5y/hatbox.git ~/hatbox
            cd ~/hatbox
            mvn package
workflows:
  version: 2
  build_and_test_hatbox:
    jobs:
      - build
      - test_hatbox:
          requires: 
            - build
